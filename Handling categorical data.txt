1.Machine learning uses only numeric values (float or int data type). However, data sets often contain the object data type 
 that needs to be transformed into numeric data type.
 >one of the way to adress this is to use One Hot Encoder:
  from sklearn.preprocessing import OneHotEncoder
  onehotencoder = OneHotEncoder(categorical_features = [0])
  X = onehotencoder.fit_transform(X).toarray()
2.df['housing'] = pd.factorize(df.housing)[0] #will convert categorical values into numeric values
3.d = {'proper': 0, 'less_proper': 1, 'improper':2,'critical':3,'very_crit':4}
  df['has nurse'] = df['has nurse'].map(d) #will map values in has nurse attr w.r.t dict d.
4.train['city'] = train['city'].astype('category').cat.codes
