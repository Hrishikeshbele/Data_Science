>dates can be present in numerous formats, which make it hard to understand by algorithms
>3 ways of preprocessing steps for date columns:
  1.Extracting the parts of the date into different columns: Year, month, day, etc.
  2.Extracting the time period between the current date and columns in terms of years, months, days, etc.
  3.Extracting some specific features from the date: Name of the weekday, Weekend or not, holiday or not, etc.
  >Building an ordinal relationship between the values is very challenging for a machine learning algorithm if 
   you leave the date columns without manipulation.If you transform the date column into the extracted columns like above, 
   the information of them become disclosed and machine learning algorithms can easily understand them.

## example code

from datetime import date
data = pd.DataFrame({'date':
['01-01-2017',
'04-12-2008',
'23-06-1988',
'25-08-1999',
'20-02-1993',
]})

#Transform string to date
data['date'] = pd.to_datetime(data.date, format="%d-%m-%Y")

#Extracting Year
data['year'] = data['date'].dt.year

#Extracting Month
data['month'] = data['date'].dt.month

#Extracting passed years since the date
data['passed_years'] = date.today().year - data['date'].dt.year

#Extracting passed months since the date
data['passed_months'] = (date.today().year - data['date'].dt.year) * 12 + date.today().month - data['date'].dt.month

#Extracting the weekday name of the date
data['day_name'] = data['date'].dt.day_name()
        date  year  month  passed_years  passed_months   day_name
0 2017-01-01  2017      1             2             26     Sunday
1 2008-12-04  2008     12            11            123   Thursday
2 1988-06-23  1988      6            31            369   Thursday
3 1999-08-25  1999      8            20            235  Wednesday
4 1993-02-20  1993      2            26            313   Saturday
